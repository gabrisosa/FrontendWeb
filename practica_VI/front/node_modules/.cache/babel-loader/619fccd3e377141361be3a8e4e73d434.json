{"ast":null,"code":"var _jsxFileName = \"/usr/src/src/components/AddPerson.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { gql, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ADD_PERSON = gql`\n  mutation addPerson($name: String, $surname: String, $email: String, $phone: String) {\n    addPerson(name: $name, surname: $surname, email: $email, phone: $phone){\n      _id\n    }\n  }\n`;\n\nconst AddPerson = _ref => {\n  _s();\n\n  let {\n    reloadHandler\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [surname, setSurname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [addPersonMutation] = useMutation(ADD_PERSON);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value) // cuando se modifica el texto del input se almacena en una variable de estado\n      ,\n      placeholder: \"Nombre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: surname,\n      onChange: e => setSurname(e.target.value),\n      placeholder: \"Apellido\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"e-mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: phone,\n      onChange: e => setPhone(e.target.value),\n      placeholder: \"Tel\\xE9fono\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addPersonMutation({\n        variables: {\n          name,\n          surname,\n          email,\n          phone\n        }\n      }).then(() => {\n        reloadHandler();\n        setName(\"\");\n        setSurname(\"\");\n        setEmail(\"\");\n        setPhone(\"\");\n      }) // cuando la mutacion se haya ejecutado llamo a reloadHandeler()\n      // cambia el estado del padre y se recarga el hijo (lista de personas)\n      ,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_s(AddPerson, \"ZUYqI7e/5eVoHW6lGk/4Z7pFxig=\", false, function () {\n  return [useMutation];\n});\n\n_c = AddPerson;\nexport default AddPerson;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPerson\");","map":{"version":3,"names":["React","useState","gql","useMutation","ADD_PERSON","AddPerson","reloadHandler","name","setName","surname","setSurname","email","setEmail","phone","setPhone","addPersonMutation","e","target","value","variables","then"],"sources":["/usr/src/src/components/AddPerson.tsx"],"sourcesContent":["import React, { FC, useState } from \"react\";\nimport {gql, useMutation} from \"@apollo/client\"\n\nconst ADD_PERSON = gql`\n  mutation addPerson($name: String, $surname: String, $email: String, $phone: String) {\n    addPerson(name: $name, surname: $surname, email: $email, phone: $phone){\n      _id\n    }\n  }\n`\n\nconst AddPerson:FC<{reloadHandler:() => void}> = ({reloadHandler}) => {\n  const [name, setName] = useState<string>(\"\");\n  const [surname, setSurname] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n  const [phone, setPhone] = useState<string>(\"\");\n\n  const [addPersonMutation] = useMutation(ADD_PERSON);\n  \n  return <div>\n    <input\n      type=\"text\"\n      value = {name}\n      onChange={(e) => setName(e.target.value)} // cuando se modifica el texto del input se almacena en una variable de estado\n      placeholder=\"Nombre\"\n    />\n    <input\n      type=\"text\"\n      value={surname}\n      onChange={(e) => setSurname(e.target.value)}\n      placeholder=\"Apellido\"\n    />\n    <input\n      type=\"text\"\n      value={email}\n      onChange={(e) => setEmail(e.target.value)}\n      placeholder=\"e-mail\"\n    />\n    <input\n      type=\"text\"\n      value={phone}\n      onChange={(e) => setPhone(e.target.value)}\n      placeholder=\"TelÃ©fono\"\n    />\n    <button\n      onClick={() => addPersonMutation({\n        variables: {\n          name,\n          surname,\n          email,\n          phone,\n        },\n      }).then(() => {\n        reloadHandler();\n        setName(\"\");\n        setSurname(\"\");\n        setEmail(\"\");\n        setPhone(\"\");\n      })}  \n      // cuando la mutacion se haya ejecutado llamo a reloadHandeler()\n      // cambia el estado del padre y se recarga el hijo (lista de personas)\n    >\n      Add\n    </button>\n  </div>\n}\n\nexport default AddPerson;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AACA,SAAQC,GAAR,EAAaC,WAAb,QAA+B,gBAA/B;;AAEA,MAAMC,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMG,SAAwC,GAAG,QAAqB;EAAA;;EAAA,IAApB;IAACC;EAAD,CAAoB;EACpE,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAS,EAAT,CAAhC;EACA,MAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAS,EAAT,CAAtC;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAS,EAAT,CAAlC;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAS,EAAT,CAAlC;EAEA,MAAM,CAACc,iBAAD,IAAsBZ,WAAW,CAACC,UAAD,CAAvC;EAEA,oBAAO;IAAA,wBACL;MACE,IAAI,EAAC,MADP;MAEE,KAAK,EAAIG,IAFX;MAGE,QAAQ,EAAGS,CAAD,IAAOR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1B,CAG4C;MAH5C;MAIE,WAAW,EAAC;IAJd;MAAA;MAAA;MAAA;IAAA,QADK,eAOL;MACE,IAAI,EAAC,MADP;MAEE,KAAK,EAAET,OAFT;MAGE,QAAQ,EAAGO,CAAD,IAAON,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;MAIE,WAAW,EAAC;IAJd;MAAA;MAAA;MAAA;IAAA,QAPK,eAaL;MACE,IAAI,EAAC,MADP;MAEE,KAAK,EAAEP,KAFT;MAGE,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;MAIE,WAAW,EAAC;IAJd;MAAA;MAAA;MAAA;IAAA,QAbK,eAmBL;MACE,IAAI,EAAC,MADP;MAEE,KAAK,EAAEL,KAFT;MAGE,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAH3B;MAIE,WAAW,EAAC;IAJd;MAAA;MAAA;MAAA;IAAA,QAnBK,eAyBL;MACE,OAAO,EAAE,MAAMH,iBAAiB,CAAC;QAC/BI,SAAS,EAAE;UACTZ,IADS;UAETE,OAFS;UAGTE,KAHS;UAITE;QAJS;MADoB,CAAD,CAAjB,CAOZO,IAPY,CAOP,MAAM;QACZd,aAAa;QACbE,OAAO,CAAC,EAAD,CAAP;QACAE,UAAU,CAAC,EAAD,CAAV;QACAE,QAAQ,CAAC,EAAD,CAAR;QACAE,QAAQ,CAAC,EAAD,CAAR;MACD,CAbc,CADjB,CAeE;MACA;MAhBF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAP;AA8CD,CAtDD;;GAAMT,S;UAMwBF,W;;;KANxBE,S;AAwDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}